<Window x:Class="AIMuster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i ="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:lc="clr-namespace:AIMuster.Converter"
         xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        mc:Ignorable="d"  WindowState="Maximized"
        Title="{DynamicResource Title_MainWindow}" Height="450" Width="800" >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="{DynamicResource Help_MainWindow}">
                <MenuItem Header="{DynamicResource Set_MainWindow}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding SetCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{DynamicResource Exit_MainWindow}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ExitAppCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </MenuItem>
        </Menu>


        <Grid Grid.Row="1">
            <ScrollViewer Visibility="{Binding IfAmplifyWeb,Converter={StaticResource BoolToVisibility},ConverterParameter=invert}">
                <ItemsControl ItemsSource="{Binding AiViewModelConfigs}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="{Binding RowCount}" Columns="{Binding ColumnCount}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <Border BorderBrush="Gray" BorderThickness="1" Margin="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <!-- 默认：显示 WebView2 -->
                                    <wv2:WebView2 x:Name="WebViewer"  Grid.Row="1" Source="{Binding ModelUrl}"  Margin="2" Visibility="{Binding IsValid ,Converter={StaticResource BoolToVisibility}}" Loaded="WebViewer_Loaded" IsHitTestVisible="False"/>

                                    <Grid  Panel.ZIndex="1" Grid.Row="0" Margin="50,0,50,0">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseEnter">
                                                <i:InvokeCommandAction Command="{Binding DataContext.MouseEnterCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeave">
                                                <i:InvokeCommandAction Command="{Binding DataContext.MouseLeaveCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <Popup Placement="MousePoint"
                                               AllowsTransparency="True"
                                               StaysOpen="False"
                                               IsOpen="{Binding IsMouseOver}">
                                            <Border CornerRadius="5" Padding="10"  MinWidth="180" Style="{DynamicResource ThemedBorderStyle}"
           >
                                                <StackPanel>
                                                    <Button Content="{DynamicResource AmplifyWeb_MainWindow}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.AmplifyWebCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}"></i:InvokeCommandAction>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                    <Button Content="{DynamicResource RefreshWeb_MainWindow}" >
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.RefreshWebCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}"></i:InvokeCommandAction>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                    <CheckBox Margin="5" Content="{DynamicResource Enable_MainWindow}" IsChecked="{Binding IsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"></CheckBox>
                                                    <ComboBox Margin="5" x:Name="ModelSelector" ItemsSource="{Binding DataContext.AiModelConfigs, RelativeSource={RelativeSource AncestorType=Window}}" DisplayMemberPath="ModelName"
SelectedItem="{Binding ., Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="SelectionChanged">
                                                                <i:InvokeCommandAction
            Command="{Binding DataContext.SelectModelCommand, RelativeSource={RelativeSource AncestorType=Window}}"  >
                                                                    <i:InvokeCommandAction.CommandParameter >
                                                                        <MultiBinding Converter="{StaticResource MultiSelectCommandParameter}">
                                                                            
                                                                        <Binding Path="SelectedItem" ElementName="ModelSelector" />
                                                                            <Binding Path=" ." ></Binding>

                                                                            <Binding RelativeSource="{RelativeSource AncestorType=ComboBox}" />
                                                                        </MultiBinding>
                                                                    </i:InvokeCommandAction.CommandParameter>
                                                                </i:InvokeCommandAction>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </ComboBox>
                                                </StackPanel>
                                            </Border>
                                        </Popup>


                                    </Grid>

                                </Grid>

                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Grid Visibility="{Binding IfAmplifyWeb,Converter={StaticResource BoolToVisibility}}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" >
                    <Button HorizontalAlignment="Right" Content="{DynamicResource CancelAmplifyWeb_MainWindow}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CloseAmplifyWebCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
                <wv2:WebView2 Grid.Row="1"  Grid.RowSpan="2" Visibility="{Binding IfAmplifyWeb,Converter={StaticResource BoolToVisibility}}"  Source="{Binding AmplifyWebModel.ModelUrl}" ></wv2:WebView2>
            </Grid>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="0"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBox TextWrapping="Wrap" VerticalScrollBarVisibility="Visible"   AcceptsReturn="True"
  Margin="10"  Grid.Column="0"  Text="{Binding CueWord,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding  Key="Enter" Command="{Binding KeyEnterCommand}" />
                </TextBox.InputBindings>
                <!--框架-->
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyDown">
                        <i:InvokeCommandAction Command="{Binding EnterCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
            </TextBox>
        </Grid>
    </Grid>
</Window>
